package dev.rubentxu.pipeline.dsl

import dev.rubentxu.pipeline.PipelineConfigTest
import io.kotest.core.spec.style.StringSpec
import io.kotest.matchers.shouldBe

class DslManagerExampleTest : StringSpec({
    
    "should create DslManager and get basic info" {
        val mockConfig = PipelineConfigTest()
        
        // Test that we can create the DslManager without exception
        val dslManager = try {
            DslManager(mockConfig)
        } catch (e: Exception) {
            throw AssertionError("Failed to create DslManager: ${e.message}", e)
        }
        
        try {
            // Test basic functionality
            val engineInfo = dslManager.getEngineInfo()
            engineInfo.size shouldBe 1
        } finally {
            dslManager.shutdown()
        }
    }
})