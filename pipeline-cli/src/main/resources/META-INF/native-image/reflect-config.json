[
  {
    "name": "kotlin.jvm.internal.Intrinsics",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "kotlin.jvm.internal.Reflection",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "kotlin.jvm.internal.ClassBasedDeclarationContainer",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "kotlin.jvm.internal.FunctionBase",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "kotlin.jvm.internal.Lambda",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "kotlin.reflect.jvm.internal.KClassImpl",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "kotlin.reflect.jvm.internal.KCallableImpl",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "kotlin.reflect.jvm.internal.KFunctionImpl",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "kotlin.reflect.jvm.internal.KPropertyImpl",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "kotlin.script.experimental.jvm.impl.KJvmCompiledScript",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "kotlin.script.experimental.jvm.CompiledJvmScriptsCache",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "dev.rubentxu.pipeline.dsl.PipelineBlock",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "dev.rubentxu.pipeline.dsl.StagesCollectionBlock",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "dev.rubentxu.pipeline.dsl.StageBlock",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "dev.rubentxu.pipeline.dsl.StepsBlock",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "dev.rubentxu.pipeline.dsl.engines.PipelineDslEngine",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "dev.rubentxu.pipeline.dsl.DslManager",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "ch.qos.logback.classic.LoggerContext",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.ConsoleAppender",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.github.ajalt.clikt.core.CliktCommand",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "com.github.ajalt.clikt.parameters.options.OptionDelegate",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "com.github.ajalt.clikt.parameters.arguments.ArgumentDelegate",
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredFields": true,
    "allPublicFields": true
  },
  {
    "name": "ScriptingHost424fd310_Line_0",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Object[]",
          "javax.script.Bindings",
          "kotlin.script.experimental.jvmhost.jsr223.KotlinJsr223ScriptEngineImpl",
          "org.jetbrains.kotlin.cli.common.repl.AggregatedReplStageState"
        ]
      }
    ]
  },
  {
    "name": "[Ljava.lang.Object;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.backend.common.extensions.IrGenerationExtension;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.backend.jvm.extensions.ClassGeneratorExtension;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.codegen.extensions.ClassBuilderInterceptorExtension;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.codegen.extensions.ClassFileFactoryFinalizerExtension;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.com.intellij.lang.jvm.facade.JvmElementProvider;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.com.intellij.openapi.editor.event.DocumentListener;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.com.intellij.psi.PsiDirectory;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.com.intellij.psi.PsiElementFinder;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.com.intellij.util.KeyedLazyInstanceEP;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.extensions.CompilerConfigurationExtension;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.extensions.StorageComponentContainerContributor;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.extensions.TypeAttributeTranslatorExtension;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.extensions.internal.CallResolutionInterceptorExtension;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.extensions.internal.TypeResolutionInterceptorExtension;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtAnnotation;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtAnnotationEntry;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtAnnotationUseSiteTarget;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtBackingField;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtBlockStringTemplateEntry;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtClass;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtClassBody;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtClassInitializer;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtClassLiteralExpression;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtCollectionLiteralExpression;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtConstantExpression;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtConstructorCalleeExpression;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtContextReceiver;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtContextReceiverList;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtContractEffect;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtContractEffectList;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtDeclarationModifierList;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtDelegatedSuperTypeEntry;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtDotQualifiedExpression;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtDynamicType;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtEnumEntrySuperclassReferenceExpression;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtEscapeStringTemplateEntry;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtFileAnnotationList;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtFunctionType;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtFunctionTypeReceiver;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtImportAlias;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtImportDirective;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtImportList;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtInitializerList;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtIntersectionType;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtLambdaArgument;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtLiteralStringTemplateEntry;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtModifierList;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtNameReferenceExpression;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtNamedFunction;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtNullableType;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtObjectDeclaration;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtPackageDirective;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtParameter;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtParameterList;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtPrimaryConstructor;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtProperty;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtPropertyAccessor;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtScript;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtScriptInitializer;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtSecondaryConstructor;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtSimpleNameStringTemplateEntry;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtStringTemplateEntry;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtStringTemplateExpression;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtSuperTypeCallEntry;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtSuperTypeEntry;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtSuperTypeList;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtTypeAlias;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtTypeArgumentList;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtTypeConstraint;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtTypeConstraintList;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtTypeParameter;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtTypeParameterList;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtTypeProjection;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtTypeReference;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtUserType;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtValueArgument;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtValueArgumentList;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.psi.KtValueArgumentName;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.resolve.diagnostics.DiagnosticSuppressor;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.resolve.extensions.ExtraImportsProviderExtension;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.resolve.extensions.SyntheticResolveExtension;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.resolve.jvm.extensions.PackageFragmentProviderExtension;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.resolve.jvm.extensions.SyntheticJavaResolveExtension;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.resolve.scopes.MemberScope;"
  },
  {
    "name": "[Lorg.jetbrains.kotlin.serialization.DescriptorSerializerPlugin;"
  },
  {
    "name": "ch.qos.logback.classic.BasicConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.DateConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LevelConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.MessageConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.github.ajalt.mordant.internal.jna.PosixLibC$winsize",
    "allDeclaredFields": true
  },
  {
    "name": "com.sun.jna.CallbackProxy",
    "methods": [
      {
        "name": "callback",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      }
    ]
  },
  {
    "name": "java.io.FilePermission"
  },
  {
    "name": "java.lang.Boolean"
  },
  {
    "name": "java.lang.CharSequence"
  },
  {
    "name": "java.lang.ClassValue"
  },
  {
    "name": "java.lang.Comparable"
  },
  {
    "name": "java.lang.Integer"
  },
  {
    "name": "java.lang.Iterable",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Number"
  },
  {
    "name": "java.lang.Object",
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Runtime",
    "methods": [
      {
        "name": "version",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Runtime$Version",
    "methods": [
      {
        "name": "build",
        "parameterTypes": []
      },
      {
        "name": "major",
        "parameterTypes": []
      },
      {
        "name": "minor",
        "parameterTypes": []
      },
      {
        "name": "pre",
        "parameterTypes": []
      },
      {
        "name": "security",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.RuntimePermission"
  },
  {
    "name": "java.lang.String"
  },
  {
    "name": "java.lang.Thread",
    "fields": [
      {
        "name": "threadLocalRandomProbe"
      }
    ]
  },
  {
    "name": "java.lang.Throwable",
    "methods": [
      {
        "name": "addSuppressed",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "java.lang.invoke.MethodHandle",
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "invokeWithArguments",
        "parameterTypes": [
          "java.lang.Object[]"
        ]
      }
    ]
  },
  {
    "name": "java.lang.invoke.MethodHandles",
    "methods": [
      {
        "name": "lookup",
        "parameterTypes": []
      },
      {
        "name": "privateLookupIn",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.invoke.MethodHandles$Lookup"
        ]
      }
    ]
  },
  {
    "name": "java.lang.invoke.MethodHandles$Lookup",
    "methods": [
      {
        "name": "findSpecial",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.invoke.MethodType",
          "java.lang.Class"
        ]
      },
      {
        "name": "in",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "unreflectSpecial",
        "parameterTypes": [
          "java.lang.reflect.Method",
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "java.lang.invoke.MethodType",
    "methods": [
      {
        "name": "methodType",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class[]"
        ]
      }
    ]
  },
  {
    "name": "java.lang.reflect.Method",
    "methods": [
      {
        "name": "isDefault",
        "parameterTypes": []
      },
      {
        "name": "isVarArgs",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.net.NetPermission"
  },
  {
    "name": "java.net.SocketPermission"
  },
  {
    "name": "java.net.URLPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.nio.Buffer"
  },
  {
    "name": "java.security.AllPermission"
  },
  {
    "name": "java.security.SecureRandomParameters"
  },
  {
    "name": "java.security.SecurityPermission"
  },
  {
    "name": "java.util.Iterator"
  },
  {
    "name": "java.util.Optional",
    "methods": [
      {
        "name": "isPresent",
        "parameterTypes": []
      },
      {
        "name": "orElse",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "java.util.PropertyPermission"
  },
  {
    "name": "java.util.concurrent.ForkJoinTask",
    "fields": [
      {
        "name": "aux"
      },
      {
        "name": "status"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.AtomicBoolean",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.AtomicReference",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.Striped64",
    "fields": [
      {
        "name": "base"
      },
      {
        "name": "cellsBusy"
      }
    ]
  },
  {
    "name": "javax.smartcardio.CardPermission"
  },
  {
    "name": "jdk.internal.loader.ClassLoaders$AppClassLoader",
    "methods": [
      {
        "name": "getUrls",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.internal.loader.ClassLoaders$PlatformClassLoader",
    "fields": [
      {
        "name": "myParents"
      }
    ],
    "methods": [
      {
        "name": "getAllParents",
        "parameterTypes": []
      },
      {
        "name": "getUrls",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.internal.misc.Unsafe"
  },
  {
    "name": "kotlin.Metadata",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bv",
        "parameterTypes": []
      },
      {
        "name": "d1",
        "parameterTypes": []
      },
      {
        "name": "d2",
        "parameterTypes": []
      },
      {
        "name": "k",
        "parameterTypes": []
      },
      {
        "name": "mv",
        "parameterTypes": []
      },
      {
        "name": "pn",
        "parameterTypes": []
      },
      {
        "name": "xi",
        "parameterTypes": []
      },
      {
        "name": "xs",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "kotlin.SafePublicationLazyImpl",
    "fields": [
      {
        "name": "_value"
      }
    ]
  },
  {
    "name": "kotlin.jvm.internal.DefaultConstructorMarker"
  },
  {
    "name": "kotlin.reflect.full.KClasses"
  },
  {
    "name": "kotlin.reflect.jvm.internal.ReflectionFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "kotlin.script.experimental.jsr223.KotlinJsr223DefaultScriptCompilationConfiguration",
    "fields": [
      {
        "name": "INSTANCE"
      }
    ]
  },
  {
    "name": "kotlin.script.experimental.jsr223.KotlinJsr223DefaultScriptEvaluationConfiguration",
    "fields": [
      {
        "name": "INSTANCE"
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.backend.common.extensions.IrGenerationExtension"
  },
  {
    "name": "org.jetbrains.kotlin.backend.jvm.extensions.ClassBuilderExtensionAdapter",
    "methods": [
      {
        "name": "getExtensions",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.openapi.project.Project"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.backend.jvm.extensions.ClassGeneratorExtension"
  },
  {
    "name": "org.jetbrains.kotlin.builtins.PlatformSpecificCastChecker",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.jetbrains.kotlin.builtins.PlatformSpecificCastChecker$Default",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.builtins.ReflectionTypes",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.descriptors.NotFoundClasses"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.builtins.jvm.JavaToKotlinClassMapper",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.builtins.jvm.JvmBuiltIns",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.builtins.jvm.JvmBuiltInsCustomizer",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.builtins.jvm.JvmBuiltInsPackageFragmentProvider",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.storage.StorageManager",
          "org.jetbrains.kotlin.load.kotlin.KotlinClassFinder",
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.descriptors.NotFoundClasses",
          "org.jetbrains.kotlin.descriptors.deserialization.AdditionalClassPartsProvider",
          "org.jetbrains.kotlin.descriptors.deserialization.PlatformDependentDeclarationFilter",
          "org.jetbrains.kotlin.serialization.deserialization.DeserializationConfiguration",
          "org.jetbrains.kotlin.types.checker.NewKotlinTypeChecker",
          "org.jetbrains.kotlin.resolve.sam.SamConversionResolver"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.cfg.ControlFlowInformationProviderImpl$Factory",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.cli.common.arguments.CommonCompilerArguments",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getAllowAnyScriptsInSourceRoots",
        "parameterTypes": []
      },
      {
        "name": "getAllowKotlinPackage",
        "parameterTypes": []
      },
      {
        "name": "getApiVersion",
        "parameterTypes": []
      },
      {
        "name": "getCheckPhaseConditions",
        "parameterTypes": []
      },
      {
        "name": "getCheckStickyPhaseConditions",
        "parameterTypes": []
      },
      {
        "name": "getCommonSources",
        "parameterTypes": []
      },
      {
        "name": "getContextReceivers",
        "parameterTypes": []
      },
      {
        "name": "getDisableDefaultScriptingPlugin",
        "parameterTypes": []
      },
      {
        "name": "getDisablePhases",
        "parameterTypes": []
      },
      {
        "name": "getDontWarnOnErrorSuppression",
        "parameterTypes": []
      },
      {
        "name": "getDumpDirectory",
        "parameterTypes": []
      },
      {
        "name": "getDumpOnlyFqName",
        "parameterTypes": []
      },
      {
        "name": "getDumpPerf",
        "parameterTypes": []
      },
      {
        "name": "getEnableBuilderInference",
        "parameterTypes": []
      },
      {
        "name": "getEnableSignatureClashChecks",
        "parameterTypes": []
      },
      {
        "name": "getExpectActualClasses",
        "parameterTypes": []
      },
      {
        "name": "getExplicitApi",
        "parameterTypes": []
      },
      {
        "name": "getExtendedCompilerChecks",
        "parameterTypes": []
      },
      {
        "name": "getFragmentRefines",
        "parameterTypes": []
      },
      {
        "name": "getFragmentSources",
        "parameterTypes": []
      },
      {
        "name": "getFragments",
        "parameterTypes": []
      },
      {
        "name": "getIgnoreConstOptimizationErrors",
        "parameterTypes": []
      },
      {
        "name": "getIncrementalCompilation",
        "parameterTypes": []
      },
      {
        "name": "getInferenceCompatibility",
        "parameterTypes": []
      },
      {
        "name": "getInlineClasses",
        "parameterTypes": []
      },
      {
        "name": "getIntellijPluginRoot",
        "parameterTypes": []
      },
      {
        "name": "getKotlinHome",
        "parameterTypes": []
      },
      {
        "name": "getLanguageVersion",
        "parameterTypes": []
      },
      {
        "name": "getLegacySmartCastAfterTry",
        "parameterTypes": []
      },
      {
        "name": "getListPhases",
        "parameterTypes": []
      },
      {
        "name": "getMetadataKlib",
        "parameterTypes": []
      },
      {
        "name": "getMetadataVersion",
        "parameterTypes": []
      },
      {
        "name": "getMultiPlatform",
        "parameterTypes": []
      },
      {
        "name": "getNewInference",
        "parameterTypes": []
      },
      {
        "name": "getNoCheckActual",
        "parameterTypes": []
      },
      {
        "name": "getNoInline",
        "parameterTypes": []
      },
      {
        "name": "getNormalizeAbsolutePath",
        "parameterTypes": []
      },
      {
        "name": "getOptIn",
        "parameterTypes": []
      },
      {
        "name": "getPhasesToDump",
        "parameterTypes": []
      },
      {
        "name": "getPhasesToDumpAfter",
        "parameterTypes": []
      },
      {
        "name": "getPhasesToDumpBefore",
        "parameterTypes": []
      },
      {
        "name": "getPhasesToValidate",
        "parameterTypes": []
      },
      {
        "name": "getPhasesToValidateAfter",
        "parameterTypes": []
      },
      {
        "name": "getPhasesToValidateBefore",
        "parameterTypes": []
      },
      {
        "name": "getPluginClasspaths",
        "parameterTypes": []
      },
      {
        "name": "getPluginConfigurations",
        "parameterTypes": []
      },
      {
        "name": "getPluginOptions",
        "parameterTypes": []
      },
      {
        "name": "getProfilePhases",
        "parameterTypes": []
      },
      {
        "name": "getProgressiveMode",
        "parameterTypes": []
      },
      {
        "name": "getRelativePathBases",
        "parameterTypes": []
      },
      {
        "name": "getRenderInternalDiagnosticNames",
        "parameterTypes": []
      },
      {
        "name": "getReportAllWarnings",
        "parameterTypes": []
      },
      {
        "name": "getReportOutputFiles",
        "parameterTypes": []
      },
      {
        "name": "getReportPerf",
        "parameterTypes": []
      },
      {
        "name": "getScript",
        "parameterTypes": []
      },
      {
        "name": "getSelfUpperBoundInference",
        "parameterTypes": []
      },
      {
        "name": "getSkipMetadataVersionCheck",
        "parameterTypes": []
      },
      {
        "name": "getSkipPrereleaseCheck",
        "parameterTypes": []
      },
      {
        "name": "getSuppressApiVersionGreaterThanLanguageVersionError",
        "parameterTypes": []
      },
      {
        "name": "getSuppressVersionWarnings",
        "parameterTypes": []
      },
      {
        "name": "getUnrestrictedBuilderInference",
        "parameterTypes": []
      },
      {
        "name": "getUseFirExtendedCheckers",
        "parameterTypes": []
      },
      {
        "name": "getUseFirFakeOverrideBuilder",
        "parameterTypes": []
      },
      {
        "name": "getUseFirIC",
        "parameterTypes": []
      },
      {
        "name": "getUseFirLT",
        "parameterTypes": []
      },
      {
        "name": "getUseK2",
        "parameterTypes": []
      },
      {
        "name": "getVerbosePhases",
        "parameterTypes": []
      },
      {
        "name": "setAllowAnyScriptsInSourceRoots",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowKotlinPackage",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApiVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCheckPhaseConditions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCheckStickyPhaseConditions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCommonSources",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setContextReceivers",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDisableDefaultScriptingPlugin",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDisablePhases",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setDontWarnOnErrorSuppression",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDumpDirectory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDumpOnlyFqName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDumpPerf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnableBuilderInference",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableSignatureClashChecks",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExpectActualClasses",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExplicitApi",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExtendedCompilerChecks",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFragmentRefines",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setFragmentSources",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setFragments",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setIgnoreConstOptimizationErrors",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIncrementalCompilation",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setInferenceCompatibility",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInlineClasses",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIntellijPluginRoot",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKotlinHome",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLanguageVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLegacySmartCastAfterTry",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setListPhases",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMetadataKlib",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMetadataVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMultiPlatform",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNewInference",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNoCheckActual",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNoInline",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNormalizeAbsolutePath",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOptIn",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setPhasesToDump",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setPhasesToDumpAfter",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setPhasesToDumpBefore",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setPhasesToValidate",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setPhasesToValidateAfter",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setPhasesToValidateBefore",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setPluginClasspaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setPluginConfigurations",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setPluginOptions",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setProfilePhases",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setProgressiveMode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRelativePathBases",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setRenderInternalDiagnosticNames",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReportAllWarnings",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReportOutputFiles",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReportPerf",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setScript",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSelfUpperBoundInference",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSkipMetadataVersionCheck",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSkipPrereleaseCheck",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSuppressApiVersionGreaterThanLanguageVersionError",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSuppressVersionWarnings",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUnrestrictedBuilderInference",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseFirExtendedCheckers",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseFirFakeOverrideBuilder",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseFirIC",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseFirLT",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseK2",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVerbosePhases",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.cli.common.arguments.CommonToolArguments",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getAllWarningsAsErrors",
        "parameterTypes": []
      },
      {
        "name": "getExtraHelp",
        "parameterTypes": []
      },
      {
        "name": "getHelp",
        "parameterTypes": []
      },
      {
        "name": "getSuppressWarnings",
        "parameterTypes": []
      },
      {
        "name": "getVerbose",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "setAllWarningsAsErrors",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExtraHelp",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHelp",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSuppressWarnings",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVerbose",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.cli.common.arguments.Freezable",
    "allDeclaredFields": true
  },
  {
    "name": "org.jetbrains.kotlin.cli.common.arguments.K2JVMCompilerArguments",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "getAbiStability",
        "parameterTypes": []
      },
      {
        "name": "getAdditionalJavaModules",
        "parameterTypes": []
      },
      {
        "name": "getAllowNoSourceFiles",
        "parameterTypes": []
      },
      {
        "name": "getAllowUnstableDependencies",
        "parameterTypes": []
      },
      {
        "name": "getAssertionsMode",
        "parameterTypes": []
      },
      {
        "name": "getBackendThreads",
        "parameterTypes": []
      },
      {
        "name": "getBuildFile",
        "parameterTypes": []
      },
      {
        "name": "getClasspath",
        "parameterTypes": []
      },
      {
        "name": "getCompileJava",
        "parameterTypes": []
      },
      {
        "name": "getDefaultScriptExtension",
        "parameterTypes": []
      },
      {
        "name": "getDestination",
        "parameterTypes": []
      },
      {
        "name": "getDisableStandardScript",
        "parameterTypes": []
      },
      {
        "name": "getDoNotClearBindingContext",
        "parameterTypes": []
      },
      {
        "name": "getEmitJvmTypeAnnotations",
        "parameterTypes": []
      },
      {
        "name": "getEnableDebugMode",
        "parameterTypes": []
      },
      {
        "name": "getEnableIrInliner",
        "parameterTypes": []
      },
      {
        "name": "getEnableJvmPreview",
        "parameterTypes": []
      },
      {
        "name": "getEnhanceTypeParameterTypesToDefNotNull",
        "parameterTypes": []
      },
      {
        "name": "getExpression",
        "parameterTypes": []
      },
      {
        "name": "getFriendPaths",
        "parameterTypes": []
      },
      {
        "name": "getIncludeRuntime",
        "parameterTypes": []
      },
      {
        "name": "getInheritMultifileParts",
        "parameterTypes": []
      },
      {
        "name": "getJavaModulePath",
        "parameterTypes": []
      },
      {
        "name": "getJavaPackagePrefix",
        "parameterTypes": []
      },
      {
        "name": "getJavaParameters",
        "parameterTypes": []
      },
      {
        "name": "getJavaSourceRoots",
        "parameterTypes": []
      },
      {
        "name": "getJavacArguments",
        "parameterTypes": []
      },
      {
        "name": "getJdkHome",
        "parameterTypes": []
      },
      {
        "name": "getJdkRelease",
        "parameterTypes": []
      },
      {
        "name": "getJspecifyAnnotations",
        "parameterTypes": []
      },
      {
        "name": "getJsr305",
        "parameterTypes": []
      },
      {
        "name": "getJvmDefault",
        "parameterTypes": []
      },
      {
        "name": "getJvmTarget",
        "parameterTypes": []
      },
      {
        "name": "getKlibLibraries",
        "parameterTypes": []
      },
      {
        "name": "getLambdas",
        "parameterTypes": []
      },
      {
        "name": "getLinkViaSignatures",
        "parameterTypes": []
      },
      {
        "name": "getModuleName",
        "parameterTypes": []
      },
      {
        "name": "getNoCallAssertions",
        "parameterTypes": []
      },
      {
        "name": "getNoJdk",
        "parameterTypes": []
      },
      {
        "name": "getNoKotlinNothingValueException",
        "parameterTypes": []
      },
      {
        "name": "getNoNewJavaAnnotationTargets",
        "parameterTypes": []
      },
      {
        "name": "getNoOptimize",
        "parameterTypes": []
      },
      {
        "name": "getNoOptimizedCallableReferences",
        "parameterTypes": []
      },
      {
        "name": "getNoParamAssertions",
        "parameterTypes": []
      },
      {
        "name": "getNoReceiverAssertions",
        "parameterTypes": []
      },
      {
        "name": "getNoReflect",
        "parameterTypes": []
      },
      {
        "name": "getNoResetJarTimestamps",
        "parameterTypes": []
      },
      {
        "name": "getNoSourceDebugExtension",
        "parameterTypes": []
      },
      {
        "name": "getNoStdlib",
        "parameterTypes": []
      },
      {
        "name": "getNoUnifiedNullChecks",
        "parameterTypes": []
      },
      {
        "name": "getNullabilityAnnotations",
        "parameterTypes": []
      },
      {
        "name": "getOldInnerClassesLogic",
        "parameterTypes": []
      },
      {
        "name": "getProfileCompilerCommand",
        "parameterTypes": []
      },
      {
        "name": "getSamConversions",
        "parameterTypes": []
      },
      {
        "name": "getSanitizeParentheses",
        "parameterTypes": []
      },
      {
        "name": "getScriptResolverEnvironment",
        "parameterTypes": []
      },
      {
        "name": "getScriptTemplates",
        "parameterTypes": []
      },
      {
        "name": "getSerializeIr",
        "parameterTypes": []
      },
      {
        "name": "getStrictMetadataVersionSemantics",
        "parameterTypes": []
      },
      {
        "name": "getStringConcat",
        "parameterTypes": []
      },
      {
        "name": "getSupportCompatqualCheckerFrameworkAnnotations",
        "parameterTypes": []
      },
      {
        "name": "getSuppressDeprecatedJvmTargetWarning",
        "parameterTypes": []
      },
      {
        "name": "getSuppressMissingBuiltinsError",
        "parameterTypes": []
      },
      {
        "name": "getTypeEnhancementImprovementsInStrictMode",
        "parameterTypes": []
      },
      {
        "name": "getUseFastJarFileSystem",
        "parameterTypes": []
      },
      {
        "name": "getUseInlineScopesNumbers",
        "parameterTypes": []
      },
      {
        "name": "getUseJavac",
        "parameterTypes": []
      },
      {
        "name": "getUseKapt4",
        "parameterTypes": []
      },
      {
        "name": "getUseOldBackend",
        "parameterTypes": []
      },
      {
        "name": "getUseOldClassFilesReading",
        "parameterTypes": []
      },
      {
        "name": "getUseOldInlineClassesManglingScheme",
        "parameterTypes": []
      },
      {
        "name": "getUseTypeTable",
        "parameterTypes": []
      },
      {
        "name": "getValidateBytecode",
        "parameterTypes": []
      },
      {
        "name": "getValidateIr",
        "parameterTypes": []
      },
      {
        "name": "getValueClasses",
        "parameterTypes": []
      },
      {
        "name": "setAbiStability",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAdditionalJavaModules",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setAllowNoSourceFiles",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowUnstableDependencies",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAssertionsMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBackendThreads",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBuildFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClasspath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCompileJava",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDefaultScriptExtension",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDestination",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisableStandardScript",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDoNotClearBindingContext",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEmitJvmTypeAnnotations",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableDebugMode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableIrInliner",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableJvmPreview",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnhanceTypeParameterTypesToDefNotNull",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExpression",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFriendPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setIncludeRuntime",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInheritMultifileParts",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJavaModulePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJavaPackagePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJavaParameters",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJavaSourceRoots",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setJavacArguments",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setJdkHome",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJdkRelease",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJspecifyAnnotations",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJsr305",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setJvmDefault",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJvmTarget",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKlibLibraries",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLambdas",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLinkViaSignatures",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNoCallAssertions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNoJdk",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNoKotlinNothingValueException",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNoNewJavaAnnotationTargets",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNoOptimize",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNoOptimizedCallableReferences",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNoParamAssertions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNoReceiverAssertions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNoReflect",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNoResetJarTimestamps",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNoSourceDebugExtension",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNoStdlib",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNoUnifiedNullChecks",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNullabilityAnnotations",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setOldInnerClassesLogic",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setProfileCompilerCommand",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSamConversions",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSanitizeParentheses",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setScriptResolverEnvironment",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setScriptTemplates",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setSerializeIr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStrictMetadataVersionSemantics",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStringConcat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSupportCompatqualCheckerFrameworkAnnotations",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSuppressDeprecatedJvmTargetWarning",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSuppressMissingBuiltinsError",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTypeEnhancementImprovementsInStrictMode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseFastJarFileSystem",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseInlineScopesNumbers",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseJavac",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseKapt4",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseOldBackend",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseOldClassFilesReading",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseOldInlineClassesManglingScheme",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseTypeTable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setValidateBytecode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setValidateIr",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setValueClasses",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.cli.common.extensions.ScriptEvaluationExtension"
  },
  {
    "name": "org.jetbrains.kotlin.cli.common.extensions.ShellExtension"
  },
  {
    "name": "org.jetbrains.kotlin.cli.jvm.compiler.CliVirtualFileFinder",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.cli.jvm.compiler.JvmPackagePartProvider",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.cli.jvm.compiler.NoScopeRecordCliBindingTrace",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.cli.jvm.compiler.TopDownAnalyzerFacadeForJVM$AllJavaSourcesInProjectScope",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.cli.jvm.compiler.TopDownAnalyzerFacadeForJVM$SourceOrBinaryModuleClassResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.cli.jvm.modules.CliJavaModuleResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.codegen.binding.CodegenBinding",
    "allPublicFields": true
  },
  {
    "name": "org.jetbrains.kotlin.codegen.extensions.ClassBuilderInterceptorExtension"
  },
  {
    "name": "org.jetbrains.kotlin.codegen.extensions.ClassFileFactoryFinalizerExtension"
  },
  {
    "name": "org.jetbrains.kotlin.codegen.serialization.JvmSerializationBindings",
    "allPublicFields": true
  },
  {
    "name": "org.jetbrains.kotlin.com.intellij.codeInsight.ContainerProvider"
  },
  {
    "name": "org.jetbrains.kotlin.com.intellij.lang.jvm.facade.JvmElementProvider"
  },
  {
    "name": "org.jetbrains.kotlin.com.intellij.mock.MockProject",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.com.intellij.openapi.application.impl.ModalityStateEx",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.com.intellij.openapi.fileTypes.BinaryFileTypeDecompilers",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.com.intellij.openapi.util.SimpleModificationTracker",
    "fields": [
      {
        "name": "myCounter"
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.com.intellij.openapi.vfs.PersistentFSConstants",
    "fields": [
      {
        "name": "ourMaxIntellisenseFileSize"
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.com.intellij.psi.CommonClassNames",
    "allDeclaredFields": true
  },
  {
    "name": "org.jetbrains.kotlin.com.intellij.psi.LanguageSubstitutors",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.com.intellij.psi.PsiElementFinder"
  },
  {
    "name": "org.jetbrains.kotlin.com.intellij.psi.SingleRootFileViewProvider",
    "fields": [
      {
        "name": "myPsiFile"
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.com.intellij.psi.compiled.ClassFileDecompilers",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.com.intellij.psi.compiled.ClassFileDecompilers$Decompiler"
  },
  {
    "name": "org.jetbrains.kotlin.com.intellij.psi.impl.source.JavaFileElementType",
    "methods": [
      {
        "name": "getExternalId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.com.intellij.psi.impl.source.tree.CompositeElement",
    "fields": [
      {
        "name": "myWrapper"
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.com.intellij.psi.search.GlobalSearchScope$NotScope",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.com.intellij.util.KeyedLazyInstanceEP"
  },
  {
    "name": "org.jetbrains.kotlin.com.intellij.util.QueryExecutor"
  },
  {
    "name": "org.jetbrains.kotlin.com.intellij.util.containers.ConcurrentIntObjectHashMap$CounterCell",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.com.intellij.util.containers.ConcurrentLongObjectHashMap",
    "fields": [
      {
        "name": "baseCount"
      },
      {
        "name": "cellsBusy"
      },
      {
        "name": "sizeCtl"
      },
      {
        "name": "transferIndex"
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.config.JvmTarget",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.config.LanguageVersionSettingsImpl",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.context.MutableModuleContextImpl",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.contracts.ContractDeserializerImpl",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.serialization.deserialization.DeserializationConfiguration",
          "org.jetbrains.kotlin.storage.StorageManager"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.contracts.EffectSystem",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowValueFactory",
          "org.jetbrains.kotlin.builtins.KotlinBuiltIns"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.contracts.parsing.ContractParsingServices",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.storage.StorageManager"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.descriptors.NotFoundClasses",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.storage.StorageManager",
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.descriptors.impl.ModuleDescriptorImpl",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.diagnostics.Errors",
    "allPublicFields": true
  },
  {
    "name": "org.jetbrains.kotlin.extensions.CollectAdditionalSourcesExtension"
  },
  {
    "name": "org.jetbrains.kotlin.extensions.CompilerConfigurationExtension"
  },
  {
    "name": "org.jetbrains.kotlin.extensions.ProcessSourcesBeforeCompilingExtension"
  },
  {
    "name": "org.jetbrains.kotlin.extensions.StorageComponentContainerContributor"
  },
  {
    "name": "org.jetbrains.kotlin.extensions.TypeAttributeTranslatorExtension"
  },
  {
    "name": "org.jetbrains.kotlin.extensions.internal.CallResolutionInterceptorExtension"
  },
  {
    "name": "org.jetbrains.kotlin.extensions.internal.CandidateInterceptor",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.openapi.project.Project"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.extensions.internal.TypeResolutionInterceptor",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.openapi.project.Project"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.extensions.internal.TypeResolutionInterceptorExtension"
  },
  {
    "name": "org.jetbrains.kotlin.fir.extensions.FirExtensionRegistrarAdapter"
  },
  {
    "name": "org.jetbrains.kotlin.idea.MainFunctionDetector$Factory$Ordinary",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.incremental.components.EnumWhenTracker$DoNothing",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.incremental.components.ExpectActualTracker$DoNothing",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.incremental.components.InlineConstTracker$DoNothing",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.incremental.components.LookupTracker$DO_NOTHING",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.load.java.AbstractJavaClassFinder",
    "methods": [
      {
        "name": "setScope",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.psi.search.GlobalSearchScope"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.load.java.AnnotationTypeQualifierResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.load.java.JavaTypeEnhancementState"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.load.java.InternalFlexibleTypeTransformer",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.load.java.JavaClassFinderImpl",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setProjectInstance",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.openapi.project.Project"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.load.java.JavaClassesTracker$Default",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.load.java.JavaTypeEnhancementState",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.load.java.components.FilesByFacadeFqNameIndexer",
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.BindingTrace"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.load.java.components.JavaDeprecationSettings",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.load.java.components.JavaPropertyInitializerEvaluatorImpl",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.load.java.components.JavaSourceElementFactoryImpl",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.load.java.components.LazyResolveBasedCache",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.lazy.ResolveSession"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.load.java.components.SignaturePropagatorImpl",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.BindingTrace"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.load.java.components.TraceBasedErrorReporter",
    "allPublicFields": true,
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.BindingTrace"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.load.java.lazy.JavaResolverComponents",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.storage.StorageManager",
          "org.jetbrains.kotlin.load.java.JavaClassFinder",
          "org.jetbrains.kotlin.load.kotlin.KotlinClassFinder",
          "org.jetbrains.kotlin.load.kotlin.DeserializedDescriptorResolver",
          "org.jetbrains.kotlin.load.java.components.SignaturePropagator",
          "org.jetbrains.kotlin.serialization.deserialization.ErrorReporter",
          "org.jetbrains.kotlin.load.java.components.JavaResolverCache",
          "org.jetbrains.kotlin.load.java.components.JavaPropertyInitializerEvaluator",
          "org.jetbrains.kotlin.resolve.sam.SamConversionResolver",
          "org.jetbrains.kotlin.load.java.sources.JavaSourceElementFactory",
          "org.jetbrains.kotlin.load.java.lazy.ModuleClassResolver",
          "org.jetbrains.kotlin.load.kotlin.PackagePartProvider",
          "org.jetbrains.kotlin.descriptors.SupertypeLoopChecker",
          "org.jetbrains.kotlin.incremental.components.LookupTracker",
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.builtins.ReflectionTypes",
          "org.jetbrains.kotlin.load.java.AnnotationTypeQualifierResolver",
          "org.jetbrains.kotlin.load.java.typeEnhancement.SignatureEnhancement",
          "org.jetbrains.kotlin.load.java.JavaClassesTracker",
          "org.jetbrains.kotlin.load.java.lazy.JavaResolverSettings",
          "org.jetbrains.kotlin.types.checker.NewKotlinTypeChecker",
          "org.jetbrains.kotlin.load.java.JavaTypeEnhancementState",
          "org.jetbrains.kotlin.load.java.JavaModuleAnnotationsProvider",
          "org.jetbrains.kotlin.resolve.jvm.SyntheticJavaPartsProvider"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.load.java.lazy.JavaResolverSettings$Companion$create$1",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.load.java.lazy.LazyJavaPackageFragmentProvider",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.load.java.lazy.JavaResolverComponents"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.load.java.sam.JvmSamConversionOracle",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.load.java.structure.impl.source.JavaFixedElementSourceFactory",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.load.java.typeEnhancement.JavaTypeEnhancement",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.load.java.lazy.JavaResolverSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.load.java.typeEnhancement.SignatureEnhancement",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.load.java.typeEnhancement.JavaTypeEnhancement"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.load.kotlin.BinaryClassAnnotationAndConstantLoaderImpl",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.descriptors.NotFoundClasses",
          "org.jetbrains.kotlin.storage.StorageManager",
          "org.jetbrains.kotlin.load.kotlin.KotlinClassFinder"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.load.kotlin.DeserializationComponentsForJava",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.storage.StorageManager",
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.serialization.deserialization.DeserializationConfiguration",
          "org.jetbrains.kotlin.load.kotlin.JavaClassDataFinder",
          "org.jetbrains.kotlin.load.kotlin.BinaryClassAnnotationAndConstantLoaderImpl",
          "org.jetbrains.kotlin.load.java.lazy.LazyJavaPackageFragmentProvider",
          "org.jetbrains.kotlin.descriptors.NotFoundClasses",
          "org.jetbrains.kotlin.serialization.deserialization.ErrorReporter",
          "org.jetbrains.kotlin.incremental.components.LookupTracker",
          "org.jetbrains.kotlin.serialization.deserialization.ContractDeserializer",
          "org.jetbrains.kotlin.types.checker.NewKotlinTypeChecker",
          "org.jetbrains.kotlin.types.extensions.TypeAttributeTranslators"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.load.kotlin.DeserializedDescriptorResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setComponents",
        "parameterTypes": [
          "org.jetbrains.kotlin.load.kotlin.DeserializationComponentsForJava"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.load.kotlin.JavaClassDataFinder",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.load.kotlin.KotlinClassFinder",
          "org.jetbrains.kotlin.load.kotlin.DeserializedDescriptorResolver"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.platform.TargetPlatform",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtAnnotatedExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtAnnotation",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtAnnotationEntry",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinAnnotationEntryStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtAnnotationUseSiteTarget",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinAnnotationUseSiteTargetStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtArrayAccessExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtBackingField",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinBackingFieldStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtBinaryExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtBinaryExpressionWithTypeRHS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtBlockStringTemplateEntry",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderWithTextStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtBreakExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtCallExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtCallableReferenceExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtCatchClause",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtClass",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinClassStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtClassBody",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtClassInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtClassLiteralExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinClassLiteralExpressionStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtCollectionLiteralExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinCollectionLiteralExpressionStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtConstantExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinConstantExpressionStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtConstructorCalleeExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtConstructorDelegationCall",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtConstructorDelegationReferenceExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtContainerNode",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtContainerNodeForControlStructureBody",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtContextReceiver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinContextReceiverStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtContextReceiverList",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtContinueExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtContractEffect",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinContractEffectStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtContractEffectList",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtDeclarationModifierList",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinModifierListStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtDelegatedSuperTypeEntry",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtDestructuringDeclaration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtDestructuringDeclarationEntry",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtDoWhileExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtDotQualifiedExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtDynamicType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtEnumEntrySuperclassReferenceExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinEnumEntrySuperclassReferenceExpressionStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtEscapeStringTemplateEntry",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderWithTextStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtFileAnnotationList",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtFinallySection",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtForExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtFunctionLiteral",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtFunctionType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtFunctionTypeReceiver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtIfExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtImportAlias",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinImportAliasStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtImportDirective",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinImportDirectiveStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtImportList",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtInitializerList",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtIntersectionType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtIsExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtLabelReferenceExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtLabeledExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtLambdaArgument",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinValueArgumentStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtLiteralStringTemplateEntry",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderWithTextStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtNameReferenceExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinNameReferenceExpressionStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtNamedFunction",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinFunctionStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtNullableType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtObjectDeclaration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinObjectStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtObjectLiteralExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtOperationReferenceExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtPackageDirective",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtParameter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinParameterStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtParameterList",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtParenthesizedExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtPostfixExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtPrefixExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtPrimaryConstructor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinConstructorStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtProperty",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPropertyStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtPropertyAccessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPropertyAccessorStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtPropertyDelegate",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtReturnExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtSafeQualifiedExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtScript",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinScriptStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtScriptInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtSecondaryConstructor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinConstructorStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtSimpleNameStringTemplateEntry",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderWithTextStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtStringTemplateExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtSuperExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtSuperTypeCallEntry",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtSuperTypeEntry",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtSuperTypeList",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtThisExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtThrowExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtTryExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtTypeAlias",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinTypeAliasStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtTypeArgumentList",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtTypeConstraint",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtTypeConstraintList",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtTypeParameter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinTypeParameterStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtTypeParameterList",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtTypeProjection",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinTypeProjectionStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtTypeReference",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtUserType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinUserTypeStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtValueArgument",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinValueArgumentStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtValueArgumentList",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtValueArgumentName",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.psi.stubs.KotlinPlaceHolderStub"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtWhenConditionInRange",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtWhenConditionIsPattern",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtWhenConditionWithExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtWhenEntry",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtWhenExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.KtWhileExpression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.lang.ASTNode"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.psi.stubs.elements.KtFileElementType",
    "methods": [
      {
        "name": "getExternalId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.AnalyzerExtensions",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.BindingTrace",
          "java.lang.Iterable",
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.AnnotationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Iterable",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.resolve.PlatformAnnotationFeaturesSupport"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.AnnotationResolverImpl",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.CallResolver",
          "org.jetbrains.kotlin.resolve.constants.evaluate.ConstantExpressionEvaluator",
          "org.jetbrains.kotlin.storage.StorageManager"
        ]
      },
      {
        "name": "setTypeResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.TypeResolver"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.BindingContext",
    "allPublicFields": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.BodyResolveCache$ThrowException",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.BodyResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.openapi.project.Project",
          "org.jetbrains.kotlin.resolve.AnnotationResolver",
          "org.jetbrains.kotlin.resolve.BodyResolveCache",
          "org.jetbrains.kotlin.resolve.calls.CallResolver",
          "org.jetbrains.kotlin.resolve.ControlFlowAnalyzer",
          "org.jetbrains.kotlin.resolve.DeclarationsChecker",
          "org.jetbrains.kotlin.resolve.DelegatedPropertyResolver",
          "org.jetbrains.kotlin.types.expressions.ExpressionTypingServices",
          "org.jetbrains.kotlin.resolve.AnalyzerExtensions",
          "org.jetbrains.kotlin.resolve.BindingTrace",
          "org.jetbrains.kotlin.types.expressions.ValueParameterResolver",
          "org.jetbrains.kotlin.resolve.AnnotationChecker",
          "org.jetbrains.kotlin.builtins.KotlinBuiltIns",
          "org.jetbrains.kotlin.resolve.OverloadChecker",
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.CliSealedClassInheritorsProvider",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.CollectionLiteralResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.resolve.calls.CallResolver",
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.CompilerDeserializationConfiguration",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.ConflictingOverloadsDispatcher",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.ConflictingOverloadsDispatcher$Default",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "fields": [
      {
        "name": "INSTANCE"
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.ControlFlowAnalyzer",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.BindingTrace",
          "org.jetbrains.kotlin.builtins.KotlinBuiltIns",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.resolve.checkers.PlatformDiagnosticSuppressor",
          "org.jetbrains.kotlin.cfg.ControlFlowInformationProvider$Factory",
          "org.jetbrains.kotlin.incremental.components.EnumWhenTracker"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.DeclarationResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.AnnotationResolver",
          "org.jetbrains.kotlin.resolve.BindingTrace"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.DeclarationsChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.DescriptorResolver",
          "org.jetbrains.kotlin.resolve.ModifiersChecker",
          "org.jetbrains.kotlin.resolve.AnnotationChecker",
          "org.jetbrains.kotlin.resolve.IdentifierChecker",
          "org.jetbrains.kotlin.resolve.BindingTrace",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.resolve.calls.results.TypeSpecificityComparator",
          "org.jetbrains.kotlin.resolve.checkers.PlatformDiagnosticSuppressor",
          "org.jetbrains.kotlin.resolve.UpperBoundChecker"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.DeclarationsCheckerBuilder",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.DescriptorResolver",
          "org.jetbrains.kotlin.resolve.ModifiersChecker",
          "org.jetbrains.kotlin.resolve.AnnotationChecker",
          "org.jetbrains.kotlin.resolve.IdentifierChecker",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.resolve.calls.results.TypeSpecificityComparator",
          "org.jetbrains.kotlin.resolve.checkers.PlatformDiagnosticSuppressor",
          "org.jetbrains.kotlin.resolve.UpperBoundChecker"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.DelegatedPropertyResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.builtins.KotlinBuiltIns",
          "org.jetbrains.kotlin.types.expressions.FakeCallResolver",
          "org.jetbrains.kotlin.types.expressions.ExpressionTypingServices",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowValueFactory",
          "org.jetbrains.kotlin.resolve.calls.tower.PSICallResolver",
          "org.jetbrains.kotlin.resolve.calls.components.PostponedArgumentsAnalyzer",
          "org.jetbrains.kotlin.resolve.calls.inference.components.KotlinConstraintSystemCompleter",
          "org.jetbrains.kotlin.resolve.calls.model.KotlinCallComponents"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.DescriptorResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.AnnotationResolver",
          "org.jetbrains.kotlin.builtins.KotlinBuiltIns",
          "org.jetbrains.kotlin.storage.StorageManager",
          "org.jetbrains.kotlin.resolve.TypeResolver",
          "org.jetbrains.kotlin.descriptors.SupertypeLoopChecker",
          "org.jetbrains.kotlin.resolve.VariableTypeAndInitializerResolver",
          "org.jetbrains.kotlin.types.expressions.ExpressionTypingServices",
          "org.jetbrains.kotlin.resolve.OverloadChecker",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.types.expressions.FunctionsTypingVisitor",
          "org.jetbrains.kotlin.types.expressions.DestructuringDeclarationResolver",
          "org.jetbrains.kotlin.resolve.ModifiersChecker",
          "org.jetbrains.kotlin.types.WrappedTypeFactory",
          "org.jetbrains.kotlin.com.intellij.openapi.project.Project",
          "org.jetbrains.kotlin.types.TypeApproximator",
          "org.jetbrains.kotlin.resolve.DeclarationReturnTypeSanitizer",
          "org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowValueFactory",
          "java.lang.Iterable",
          "org.jetbrains.kotlin.resolve.AdditionalClassPartsProvider"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.FilePreprocessor",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.BindingTrace",
          "java.lang.Iterable"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.FunctionDescriptorResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.TypeResolver",
          "org.jetbrains.kotlin.resolve.DescriptorResolver",
          "org.jetbrains.kotlin.resolve.AnnotationResolver",
          "org.jetbrains.kotlin.builtins.KotlinBuiltIns",
          "org.jetbrains.kotlin.resolve.ModifiersChecker",
          "org.jetbrains.kotlin.resolve.OverloadChecker",
          "org.jetbrains.kotlin.contracts.parsing.ContractParsingServices",
          "org.jetbrains.kotlin.types.expressions.ExpressionTypingServices",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.storage.StorageManager"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.BindingTrace",
          "org.jetbrains.kotlin.resolve.DeclarationResolver",
          "org.jetbrains.kotlin.resolve.OverrideResolver",
          "org.jetbrains.kotlin.resolve.OverloadResolver",
          "org.jetbrains.kotlin.resolve.VarianceChecker",
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.resolve.lazy.LazyDeclarationResolver",
          "org.jetbrains.kotlin.resolve.BodyResolver",
          "org.jetbrains.kotlin.resolve.lazy.TopLevelDescriptorProvider",
          "org.jetbrains.kotlin.resolve.lazy.FileScopeProvider",
          "org.jetbrains.kotlin.resolve.lazy.DeclarationScopeProvider",
          "org.jetbrains.kotlin.resolve.QualifiedExpressionResolver",
          "org.jetbrains.kotlin.resolve.IdentifierChecker",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.resolve.deprecation.DeprecationResolver",
          "java.lang.Iterable",
          "org.jetbrains.kotlin.resolve.FilePreprocessor"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.LocalVariableResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.ModifiersChecker",
          "org.jetbrains.kotlin.resolve.IdentifierChecker",
          "org.jetbrains.kotlin.types.expressions.DataFlowAnalyzer",
          "org.jetbrains.kotlin.resolve.AnnotationResolver",
          "org.jetbrains.kotlin.resolve.VariableTypeAndInitializerResolver",
          "org.jetbrains.kotlin.resolve.DelegatedPropertyResolver",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowValueFactory"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.MissingSupertypesResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.storage.StorageManager",
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.ModifiersChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.AnnotationChecker",
          "java.lang.Iterable",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.incremental.components.ExpectActualTracker",
          "org.jetbrains.kotlin.resolve.deprecation.DeprecationResolver",
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.resolve.MissingSupertypesResolver"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.ModuleStructureOracle",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.ModuleStructureOracle$SingleModule",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "fields": [
      {
        "name": "INSTANCE"
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.OverloadChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.results.TypeSpecificityComparator"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.OverloadResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.BindingTrace",
          "org.jetbrains.kotlin.resolve.OverloadFilter",
          "org.jetbrains.kotlin.resolve.OverloadChecker",
          "org.jetbrains.kotlin.resolve.ConflictingOverloadsDispatcher",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.idea.MainFunctionDetector$Factory"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.OverrideResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.BindingTrace",
          "org.jetbrains.kotlin.resolve.OverridesBackwardCompatibilityHelper",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.types.checker.KotlinTypeRefiner",
          "org.jetbrains.kotlin.platform.PlatformSpecificDiagnosticComponents"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.QualifiedExpressionResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.StatementFilter",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.SupertypeLoopCheckerImpl",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.TypeResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.AnnotationResolver",
          "org.jetbrains.kotlin.resolve.QualifiedExpressionResolver",
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.resolve.TypeResolver$TypeTransformerForTests",
          "org.jetbrains.kotlin.types.DynamicTypesSettings",
          "org.jetbrains.kotlin.resolve.calls.tasks.DynamicCallableDescriptors",
          "org.jetbrains.kotlin.resolve.IdentifierChecker",
          "org.jetbrains.kotlin.builtins.PlatformToKotlinClassMapper",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.resolve.UpperBoundChecker",
          "org.jetbrains.kotlin.types.extensions.TypeAttributeTranslators"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.VariableTypeAndInitializerResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.storage.StorageManager",
          "org.jetbrains.kotlin.types.expressions.ExpressionTypingServices",
          "org.jetbrains.kotlin.resolve.TypeResolver",
          "org.jetbrains.kotlin.resolve.constants.evaluate.ConstantExpressionEvaluator",
          "org.jetbrains.kotlin.resolve.DelegatedPropertyResolver",
          "org.jetbrains.kotlin.types.WrappedTypeFactory",
          "org.jetbrains.kotlin.types.TypeApproximator",
          "org.jetbrains.kotlin.resolve.DeclarationReturnTypeSanitizer",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "java.lang.Iterable"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.VarianceChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.BindingTrace",
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.ArgumentTypeResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.TypeResolver",
          "org.jetbrains.kotlin.builtins.KotlinBuiltIns",
          "org.jetbrains.kotlin.builtins.ReflectionTypes",
          "org.jetbrains.kotlin.resolve.constants.evaluate.ConstantExpressionEvaluator",
          "org.jetbrains.kotlin.types.FunctionPlaceholders",
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.types.checker.KotlinTypeChecker"
        ]
      },
      {
        "name": "setDoubleColonExpressionResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.expressions.DoubleColonExpressionResolver"
        ]
      },
      {
        "name": "setExpressionTypingServices",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.expressions.ExpressionTypingServices"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.CallCompleter",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.ArgumentTypeResolver",
          "org.jetbrains.kotlin.resolve.calls.CandidateResolver",
          "org.jetbrains.kotlin.types.expressions.DataFlowAnalyzer",
          "java.lang.Iterable",
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.resolve.deprecation.DeprecationResolver",
          "org.jetbrains.kotlin.contracts.EffectSystem",
          "org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowValueFactory",
          "org.jetbrains.kotlin.resolve.MissingSupertypesResolver",
          "org.jetbrains.kotlin.resolve.calls.model.KotlinCallComponents"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.CallExpressionResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.CallResolver",
          "org.jetbrains.kotlin.resolve.constants.evaluate.ConstantExpressionEvaluator",
          "org.jetbrains.kotlin.resolve.calls.ArgumentTypeResolver",
          "org.jetbrains.kotlin.types.expressions.DataFlowAnalyzer",
          "org.jetbrains.kotlin.builtins.KotlinBuiltIns",
          "org.jetbrains.kotlin.resolve.QualifiedExpressionResolver",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowValueFactory",
          "org.jetbrains.kotlin.types.checker.KotlinTypeRefiner"
        ]
      },
      {
        "name": "setExpressionTypingServices",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.expressions.ExpressionTypingServices"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.CallResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.builtins.KotlinBuiltIns",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowValueFactory"
        ]
      },
      {
        "name": "setArgumentTypeResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.ArgumentTypeResolver"
        ]
      },
      {
        "name": "setCallCompleter",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.CallCompleter"
        ]
      },
      {
        "name": "setExpressionTypingServices",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.expressions.ExpressionTypingServices"
        ]
      },
      {
        "name": "setGenericCandidateResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.GenericCandidateResolver"
        ]
      },
      {
        "name": "setPSICallResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.tower.PSICallResolver"
        ]
      },
      {
        "name": "setResolutionOldInference",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.tower.NewResolutionOldInference"
        ]
      },
      {
        "name": "setSyntheticScopes",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.scopes.SyntheticScopes"
        ]
      },
      {
        "name": "setTypeResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.TypeResolver"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.CandidateResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.ArgumentTypeResolver",
          "org.jetbrains.kotlin.resolve.calls.GenericCandidateResolver",
          "org.jetbrains.kotlin.builtins.ReflectionTypes",
          "java.lang.Iterable",
          "org.jetbrains.kotlin.resolve.calls.smartcasts.SmartCastManager",
          "org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowValueFactory",
          "org.jetbrains.kotlin.resolve.UpperBoundChecker"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.GenericCandidateResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.ArgumentTypeResolver",
          "org.jetbrains.kotlin.resolve.calls.inference.BuilderInferenceSupport",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowValueFactory"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.KotlinCallResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.tower.TowerResolver",
          "org.jetbrains.kotlin.resolve.calls.components.KotlinCallCompleter",
          "org.jetbrains.kotlin.resolve.calls.components.NewOverloadingConflictResolver",
          "org.jetbrains.kotlin.resolve.calls.components.CallableReferenceArgumentResolver",
          "org.jetbrains.kotlin.resolve.calls.model.KotlinCallComponents"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.AbstractClassInstantiationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.ApiVersionCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.AssigningNamedArgumentToVarargChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.BuilderFunctionsCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.BuilderInferenceAssignmentChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.CallReturnsArrayOfNothingChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.CallableReferenceCompatibilityChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.CapturingInClosureChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.CompanionInParenthesesLHSCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.CompanionIncorrectlyUnboundedWhenUsedAsLHSCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.ConstructorHeaderCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.ContractNotAllowedCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.CoroutineSuspendCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.CustomEnumEntriesMigrationCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.DeprecatedCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.DslScopeViolationCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.EnumEntriesUnsupportedChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.EnumEntryVsCompanionPriorityCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.EqualityCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.FunInterfaceConstructorReferenceChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.ImplicitNothingAsTypeParameterCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.IncorrectCapturedApproximationCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.InfixCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.InlineCheckerWrapper",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.LambdaWithSuspendModifierCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.LateinitIntrinsicApplicabilityChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.NamedFunAsExpressionChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.NewSchemeOfIntegerOperatorResolutionChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.NullableVarargArgumentCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.OperatorCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.ProtectedConstructorCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.ReferencingToUnderscoreNamedParameterOfCatchBlockChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.ReifiedTypeParameterSubstitutionChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.ResolutionToPrivateConstructorOfSealedClassChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.ResultTypeWithNullableOperatorsChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.SafeCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.SelfCallInNestedObjectConstructorChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.SuspendConversionCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.SynchronizedByValueChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.UnderscoreUsageChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.UnitConversionCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.UnsupportedUntilOperatorChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.UnsupportedUntilRangeDeclarationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.UselessElvisCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.checkers.VarargWrongExecutionOrderChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.components.AdditionalDiagnosticReporter",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.components.ArgumentsToParametersMapper",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.components.CallableReferenceArgumentResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.components.CallableReferenceOverloadConflictResolver"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.components.CallableReferenceOverloadConflictResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.builtins.KotlinBuiltIns",
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.resolve.calls.results.TypeSpecificityComparator",
          "org.jetbrains.kotlin.resolve.calls.results.PlatformOverloadsSpecificityComparator",
          "org.jetbrains.kotlin.util.CancellationChecker",
          "org.jetbrains.kotlin.resolve.calls.components.KotlinResolutionStatelessCallbacks",
          "org.jetbrains.kotlin.resolve.calls.inference.components.ConstraintInjector",
          "org.jetbrains.kotlin.types.checker.KotlinTypeRefiner"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.components.ClassicTypeSystemContextForCS",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.builtins.KotlinBuiltIns",
          "org.jetbrains.kotlin.types.checker.KotlinTypeRefiner"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.components.KotlinCallCompleter",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.components.PostponedArgumentsAnalyzer",
          "org.jetbrains.kotlin.resolve.calls.inference.components.KotlinConstraintSystemCompleter",
          "org.jetbrains.kotlin.resolve.calls.inference.components.TrivialConstraintTypeInferenceOracle",
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.components.NewOverloadingConflictResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.builtins.KotlinBuiltIns",
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.resolve.calls.results.TypeSpecificityComparator",
          "org.jetbrains.kotlin.resolve.calls.results.PlatformOverloadsSpecificityComparator",
          "org.jetbrains.kotlin.util.CancellationChecker",
          "org.jetbrains.kotlin.resolve.calls.components.KotlinResolutionStatelessCallbacks",
          "org.jetbrains.kotlin.resolve.calls.inference.components.ConstraintInjector",
          "org.jetbrains.kotlin.types.checker.KotlinTypeRefiner"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.components.PostponedArgumentsAnalyzer",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.components.CallableReferenceArgumentResolver",
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.components.TypeArgumentsToParametersMapper",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.inference.BuilderInferenceSupport",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.ArgumentTypeResolver",
          "org.jetbrains.kotlin.types.expressions.ExpressionTypingServices"
        ]
      },
      {
        "name": "setCallCompleter",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.CallCompleter"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.inference.components.ClassicConstraintSystemUtilContext",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.checker.KotlinTypeRefiner",
          "org.jetbrains.kotlin.builtins.KotlinBuiltIns"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.inference.components.ConstraintIncorporator",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.AbstractTypeApproximator",
          "org.jetbrains.kotlin.resolve.calls.inference.components.TrivialConstraintTypeInferenceOracle",
          "org.jetbrains.kotlin.resolve.calls.inference.components.ConstraintSystemUtilContext"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.inference.components.ConstraintInjector",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.inference.components.ConstraintIncorporator",
          "org.jetbrains.kotlin.types.AbstractTypeApproximator",
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.inference.components.KotlinConstraintSystemCompleter",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.inference.components.ResultTypeResolver",
          "org.jetbrains.kotlin.resolve.calls.inference.components.VariableFixationFinder",
          "org.jetbrains.kotlin.resolve.calls.inference.components.PostponedArgumentInputTypesResolver",
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.inference.components.PostponedArgumentInputTypesResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.inference.components.ResultTypeResolver",
          "org.jetbrains.kotlin.resolve.calls.inference.components.VariableFixationFinder",
          "org.jetbrains.kotlin.resolve.calls.inference.components.ConstraintSystemUtilContext",
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.inference.components.ResultTypeResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.AbstractTypeApproximator",
          "org.jetbrains.kotlin.resolve.calls.inference.components.TrivialConstraintTypeInferenceOracle",
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.inference.components.TrivialConstraintTypeInferenceOracle",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.model.TypeSystemInferenceExtensionContextDelegate"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.inference.components.VariableFixationFinder",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.inference.components.TrivialConstraintTypeInferenceOracle",
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.model.KotlinCallComponents",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.components.KotlinResolutionStatelessCallbacks",
          "org.jetbrains.kotlin.resolve.calls.components.ArgumentsToParametersMapper",
          "org.jetbrains.kotlin.resolve.calls.components.TypeArgumentsToParametersMapper",
          "org.jetbrains.kotlin.resolve.calls.inference.components.ConstraintInjector",
          "org.jetbrains.kotlin.builtins.ReflectionTypes",
          "org.jetbrains.kotlin.builtins.KotlinBuiltIns",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.resolve.sam.SamConversionOracle",
          "org.jetbrains.kotlin.resolve.sam.SamConversionResolver",
          "org.jetbrains.kotlin.types.checker.NewKotlinTypeChecker",
          "org.jetbrains.kotlin.incremental.components.LookupTracker",
          "org.jetbrains.kotlin.types.checker.KotlinTypeRefiner",
          "org.jetbrains.kotlin.resolve.calls.components.CallableReferenceArgumentResolver"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.results.ResolutionResultsHandler",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.builtins.KotlinBuiltIns",
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.resolve.calls.results.TypeSpecificityComparator",
          "org.jetbrains.kotlin.resolve.calls.results.PlatformOverloadsSpecificityComparator",
          "org.jetbrains.kotlin.util.CancellationChecker",
          "org.jetbrains.kotlin.types.checker.KotlinTypeRefiner"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowValueFactoryImpl",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.smartcasts.SmartCastManager",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.ArgumentTypeResolver"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.tasks.DynamicCallableDescriptors",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.storage.StorageManager",
          "org.jetbrains.kotlin.builtins.KotlinBuiltIns"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.tower.KotlinResolutionStatelessCallbacksImpl",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.deprecation.DeprecationResolver",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.types.checker.KotlinTypeRefiner"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.tower.KotlinToResolvedCallTransformer",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Iterable",
          "java.lang.Iterable",
          "org.jetbrains.kotlin.types.expressions.DataFlowAnalyzer",
          "org.jetbrains.kotlin.resolve.calls.ArgumentTypeResolver",
          "org.jetbrains.kotlin.resolve.constants.evaluate.ConstantExpressionEvaluator",
          "org.jetbrains.kotlin.resolve.deprecation.DeprecationResolver",
          "org.jetbrains.kotlin.types.expressions.ExpressionTypingServices",
          "org.jetbrains.kotlin.types.expressions.DoubleColonExpressionResolver",
          "org.jetbrains.kotlin.resolve.calls.components.AdditionalDiagnosticReporter",
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowValueFactory",
          "org.jetbrains.kotlin.builtins.KotlinBuiltIns",
          "org.jetbrains.kotlin.types.model.TypeSystemInferenceExtensionContextDelegate",
          "org.jetbrains.kotlin.resolve.calls.smartcasts.SmartCastManager",
          "org.jetbrains.kotlin.types.TypeApproximator",
          "org.jetbrains.kotlin.resolve.MissingSupertypesResolver",
          "org.jetbrains.kotlin.extensions.internal.CandidateInterceptor",
          "org.jetbrains.kotlin.resolve.calls.model.KotlinCallComponents"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.tower.NewResolutionOldInference",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.CandidateResolver",
          "org.jetbrains.kotlin.resolve.calls.tower.TowerResolver",
          "org.jetbrains.kotlin.resolve.calls.results.ResolutionResultsHandler",
          "org.jetbrains.kotlin.resolve.calls.tasks.DynamicCallableDescriptors",
          "org.jetbrains.kotlin.resolve.scopes.SyntheticScopes",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.resolve.calls.inference.BuilderInferenceSupport",
          "org.jetbrains.kotlin.resolve.deprecation.DeprecationResolver",
          "org.jetbrains.kotlin.types.TypeApproximator",
          "org.jetbrains.kotlin.resolve.calls.tower.ImplicitsExtensionsResolutionFilter",
          "org.jetbrains.kotlin.resolve.calls.CallResolver",
          "org.jetbrains.kotlin.extensions.internal.CandidateInterceptor"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.tower.PSICallResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.TypeResolver",
          "org.jetbrains.kotlin.types.expressions.ExpressionTypingServices",
          "org.jetbrains.kotlin.types.expressions.DoubleColonExpressionResolver",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.resolve.calls.tasks.DynamicCallableDescriptors",
          "org.jetbrains.kotlin.resolve.scopes.SyntheticScopes",
          "org.jetbrains.kotlin.resolve.calls.model.KotlinCallComponents",
          "org.jetbrains.kotlin.resolve.calls.tower.KotlinToResolvedCallTransformer",
          "org.jetbrains.kotlin.resolve.calls.KotlinCallResolver",
          "org.jetbrains.kotlin.types.TypeApproximator",
          "org.jetbrains.kotlin.resolve.calls.tower.ImplicitsExtensionsResolutionFilter",
          "org.jetbrains.kotlin.resolve.calls.ArgumentTypeResolver",
          "org.jetbrains.kotlin.contracts.EffectSystem",
          "org.jetbrains.kotlin.resolve.constants.evaluate.ConstantExpressionEvaluator",
          "org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowValueFactory",
          "org.jetbrains.kotlin.resolve.calls.components.PostponedArgumentsAnalyzer",
          "org.jetbrains.kotlin.resolve.calls.inference.components.KotlinConstraintSystemCompleter",
          "org.jetbrains.kotlin.resolve.deprecation.DeprecationResolver",
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.extensions.internal.CandidateInterceptor",
          "org.jetbrains.kotlin.resolve.MissingSupertypesResolver",
          "org.jetbrains.kotlin.resolve.calls.inference.components.ResultTypeResolver"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.calls.tower.TowerResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.ActualClassifierMustHasTheSameMembersAsNonFinalExpectClassifierChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.ActualTypealiasToSpecialAnnotationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.AnnotationClassTargetAndRetentionChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.ApiVersionClassifierUsageChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.BigFunctionTypeAvailabilityChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.ConstModifierChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.ContextualDeclarationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.ContractDescriptionBlockChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.CyclicAnnotationsChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.DataClassDeclarationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.DataObjectContentChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.DelegationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.DeprecatedClassifierUsageChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.DeprecatedSinceKotlinAnnotationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.DeprecationInheritanceChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.DynamicReceiverChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.EnumCompanionInEnumConstructorCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.EnumEntriesRedeclarationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.ExpectActualClassifiersAreInBetaChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.ExpectActualInTheSameModuleChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.ExpectedActualDeclarationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.ModuleStructureOracle",
          "java.lang.Iterable"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.ExplicitApiDeclarationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.FunInterfaceDeclarationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.InfixModifierChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.InlineParameterChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.InnerClassInsideValueClass",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.KClassWithIncorrectTypeArgumentChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.LocalVariableTypeParametersChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.MissingDependencyClassChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.MissingDependencyClassChecker$ClassifierUsage",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.MissingDependencySupertypeChecker$ForCalls",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.MissingDependencySupertypeChecker$ForDeclarations",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.MultiFieldValueClassAnnotationsChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.NullableExtensionOperatorWithSafeCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.OptInMarkerDeclarationAnnotationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.OptInUsageChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.openapi.project.Project"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.OptInUsageChecker$ClassifierUsage",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.openapi.project.Project"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.OptInUsageChecker$Overrides",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.openapi.project.Project"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.OptionalExpectationUsageChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.PlatformDiagnosticSuppressor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.PlatformDiagnosticSuppressor$Default",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "fields": [
      {
        "name": "INSTANCE"
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.PrimitiveNumericComparisonCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.PrivateInlineFunctionsReturningAnonymousObjectsChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.PropertiesWithBackingFieldsInsideValueClass",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.ReifiedTypeParameterAnnotationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.RequireKotlinAnnotationValueChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.ReservedMembersAndConstructsForValueClass",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.ResultClassInReturnTypeChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.SealedInheritorInSameModuleChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.SealedInheritorInSamePackageChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.SealedInterfaceAllowedChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.SinceKotlinAnnotationValueChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.StubForBuilderInferenceParameterTypeChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.SubtypingBetweenContextReceiversChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.SuspendFunctionAsSupertypeChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.SuspendLimitationsChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.TailrecFunctionChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.TrailingCommaCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.TrailingCommaDeclarationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.UnderscoreChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.ValueClassDeclarationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.ValueParameterUsageInDefaultArgumentChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.checkers.VolatileAnnotationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.constants.evaluate.ConstantExpressionEvaluator",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.com.intellij.openapi.project.Project",
          "org.jetbrains.kotlin.incremental.components.InlineConstTracker"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.deprecation.DeprecationResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.storage.StorageManager",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.resolve.deprecation.DeprecationSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.diagnostics.DiagnosticSuppressor"
  },
  {
    "name": "org.jetbrains.kotlin.resolve.extensions.ExtraImportsProviderExtension"
  },
  {
    "name": "org.jetbrains.kotlin.resolve.extensions.SyntheticResolveExtension"
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.CompositeSyntheticJavaPartsProvider",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.JavaDescriptorResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.load.java.lazy.LazyJavaPackageFragmentProvider",
          "org.jetbrains.kotlin.load.java.components.JavaResolverCache"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.JvmAdditionalClassPartsProvider",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.JvmDeclarationReturnTypeSanitizer",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.JvmDelegationFilter",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.JvmDiagnosticComponents",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.load.java.AnnotationTypeQualifierResolver"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.JvmOverloadFilter",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.JvmOverridesBackwardCompatibilityHelper",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.JvmPlatformAnnotationFeaturesSupport",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.JvmPlatformOverloadsSpecificityComparator",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.JvmTypeSpecificityComparatorDelegate",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.model.TypeSystemInferenceExtensionContextDelegate"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.RuntimeAssertionsOnExtensionReceiverCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.RuntimeAssertionsTypeChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.ApiVersionIsAtLeastArgumentsChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.BadInheritedJavaSignaturesChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.ClassInheritsJavaSealedClassChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.DefaultCheckerInTailrec",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.EnumDeclaringClassDeprecationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.ExplicitMetadataChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.ExternalFunChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.FileClassAnnotationsChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.FunctionDelegateMemberNameClashChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.InconsistentOperatorFromJavaCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.InlinePlatformCompatibilityChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.config.JvmTarget"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.InterfaceDefaultMethodCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.config.JvmTarget",
          "org.jetbrains.kotlin.com.intellij.openapi.project.Project"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.JavaAnnotationCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.JavaClassOnCompanionChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.JavaNullabilityChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.UpperBoundChecker"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.JavaOverrideWithWrongNullabilityOverrideChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.JavaTypeAccessibilityChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.JvmAnnotationsTargetNonExistentAccessorChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.JvmArrayVariableInLoopAssignmentChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.JvmDefaultChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.config.JvmTarget",
          "org.jetbrains.kotlin.com.intellij.openapi.project.Project"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.JvmFieldApplicabilityChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.JvmInlineApplicabilityChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.JvmModuleAccessibilityChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.openapi.project.Project"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.JvmModuleAccessibilityChecker$ClassifierUsage",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.jvm.checkers.JvmModuleAccessibilityChecker"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.JvmMultifileClassStateChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.JvmNameAnnotationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.JvmPropertyVsFieldAmbiguityCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.JvmRecordApplicabilityChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.config.JvmTarget"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.JvmReflectionAPICallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.builtins.ReflectionTypes",
          "org.jetbrains.kotlin.storage.StorageManager"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.JvmSerializableLambdaAnnotationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.JvmSimpleNameBacktickChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.JvmStaticChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.JvmSyntheticApplicabilityChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.JvmSyntheticAssignmentChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.LocalFunInlineChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.MissingBuiltInDeclarationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.MissingBuiltInDeclarationChecker$ClassifierUsage",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.OverloadsAnnotationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.PolymorphicSignatureCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.ProtectedInSuperClassCompanionCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.ProtectedSyntheticExtensionCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.RepeatableAnnotationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.config.JvmTarget",
          "org.jetbrains.kotlin.resolve.jvm.JvmPlatformAnnotationFeaturesSupport",
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.SamInterfaceConstructorReferenceCallChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.StrictfpApplicabilityChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.SuperCallWithDefaultArgumentsChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.SuspendInFunInterfaceChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.SuspensionPointInsideMutexLockChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.SynchronizedAnnotationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.SynchronizedAnnotationOnLambdaChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.TypeParameterBoundIsNotArrayChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.UnsupportedSyntheticCallableReferenceChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.UpperBoundViolatedInTypealiasConstructorChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.checkers.WarningAwareUpperBoundChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.checker.KotlinTypeChecker"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.extensions.PackageFragmentProviderExtension"
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.extensions.SyntheticJavaResolveExtension"
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.multiplatform.JavaActualAnnotationArgumentExtractor",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.multiplatform.OptionalAnnotationPackageFragmentProvider",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.storage.StorageManager",
          "org.jetbrains.kotlin.descriptors.NotFoundClasses",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.load.kotlin.PackagePartProvider"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.platform.JavaGenericVarianceViolationTypeChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.jvm.platform.JvmPlatformAnalyzerServices",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.lazy.BasicAbsentDescriptorHandler",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.lazy.CompilerLocalDescriptorResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.lazy.LazyDeclarationResolver"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.lazy.DeclarationScopeProvider",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.lazy.DeclarationScopeProviderImpl",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.lazy.LazyDeclarationResolver",
          "org.jetbrains.kotlin.resolve.lazy.FileScopeProvider"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.lazy.FileScopeFactory",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.lazy.TopLevelDescriptorProvider",
          "org.jetbrains.kotlin.resolve.BindingTrace",
          "org.jetbrains.kotlin.resolve.PlatformDependentAnalyzerServices",
          "org.jetbrains.kotlin.resolve.lazy.ImportResolutionComponents"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.lazy.FileScopeProvider",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.lazy.FileScopeProviderImpl",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.lazy.FileScopeFactory",
          "org.jetbrains.kotlin.resolve.BindingTrace",
          "org.jetbrains.kotlin.storage.StorageManager"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.lazy.ImportResolutionComponents",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.storage.StorageManager",
          "org.jetbrains.kotlin.resolve.QualifiedExpressionResolver",
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.builtins.PlatformToKotlinClassMapper",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.resolve.deprecation.DeprecationResolver",
          "org.jetbrains.kotlin.resolve.scopes.optimization.OptimizingOptions"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.lazy.LazyDeclarationResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.context.GlobalContext",
          "org.jetbrains.kotlin.resolve.BindingTrace",
          "org.jetbrains.kotlin.resolve.lazy.TopLevelDescriptorProvider",
          "org.jetbrains.kotlin.resolve.lazy.AbsentDescriptorHandler"
        ]
      },
      {
        "name": "setDeclarationScopeProvider",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.lazy.DeclarationScopeProviderImpl"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.lazy.ResolveSession",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.openapi.project.Project",
          "org.jetbrains.kotlin.context.GlobalContext",
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.resolve.lazy.declarations.DeclarationProviderFactory",
          "org.jetbrains.kotlin.resolve.BindingTrace",
          "org.jetbrains.kotlin.types.checker.NewKotlinTypeChecker"
        ]
      },
      {
        "name": "setAdditionalClassPartsProvider",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.AdditionalClassPartsProvider"
        ]
      },
      {
        "name": "setAnnotationResolve",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.AnnotationResolver"
        ]
      },
      {
        "name": "setDeclarationScopeProvider",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.lazy.DeclarationScopeProviderImpl"
        ]
      },
      {
        "name": "setDelegationFilter",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.lazy.DelegationFilter"
        ]
      },
      {
        "name": "setDescriptorResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.DescriptorResolver"
        ]
      },
      {
        "name": "setFileScopeProvider",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.lazy.FileScopeProvider"
        ]
      },
      {
        "name": "setFunctionDescriptorResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.FunctionDescriptorResolver"
        ]
      },
      {
        "name": "setLanguageVersionSettings",
        "parameterTypes": [
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      },
      {
        "name": "setLazyDeclarationResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.lazy.LazyDeclarationResolver"
        ]
      },
      {
        "name": "setLocalDescriptorResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.lazy.LocalDescriptorResolver"
        ]
      },
      {
        "name": "setLookupTracker",
        "parameterTypes": [
          "org.jetbrains.kotlin.incremental.components.LookupTracker"
        ]
      },
      {
        "name": "setPlatformDiagnosticSuppressor",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.checkers.PlatformDiagnosticSuppressor"
        ]
      },
      {
        "name": "setSamConversionResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.sam.SamConversionResolver"
        ]
      },
      {
        "name": "setSealedClassInheritorsProvider",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.SealedClassInheritorsProvider"
        ]
      },
      {
        "name": "setSupertypeLoopsResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.descriptors.SupertypeLoopChecker"
        ]
      },
      {
        "name": "setTypeResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.TypeResolver"
        ]
      },
      {
        "name": "setWrappedTypeFactory",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.WrappedTypeFactory"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.lazy.declarations.FileBasedDeclarationProviderFactory",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.sam.SamConversionResolverImpl",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.storage.StorageManager",
          "java.lang.Iterable"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.resolve.scopes.DescriptorKindFilter",
    "allPublicFields": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.scopes.optimization.OptimizingOptions",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.jetbrains.kotlin.resolve.scopes.optimization.OptimizingOptions$Default",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "fields": [
      {
        "name": "INSTANCE"
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.scripting.compiler.plugin.repl.ReplCodeAnalyzerBase$ScriptMutableDeclarationProviderFactory",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.scripting.compiler.plugin.repl.ReplImplicitsExtensionsResolutionFilter",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.serialization.DescriptorSerializerPlugin"
  },
  {
    "name": "org.jetbrains.kotlin.storage.LockBasedStorageManager",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.synthetic.JavaSyntheticScopes",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.openapi.project.Project",
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.storage.StorageManager",
          "org.jetbrains.kotlin.incremental.components.LookupTracker",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.resolve.sam.SamConversionResolver",
          "org.jetbrains.kotlin.resolve.sam.SamConversionOracle",
          "org.jetbrains.kotlin.resolve.deprecation.DeprecationResolver",
          "org.jetbrains.kotlin.types.checker.KotlinTypeRefiner"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.types.AbstractTypeApproximator",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.jetbrains.kotlin.types.DynamicTypesSettings",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.types.FunctionPlaceholders",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.builtins.KotlinBuiltIns"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.types.TypeApproximator",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.builtins.KotlinBuiltIns",
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.types.WrappedTypeFactory",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.storage.StorageManager"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.types.checker.KotlinTypePreparator$Default",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.types.checker.KotlinTypeRefiner$Default",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.types.checker.NewKotlinTypeCheckerImpl",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.checker.KotlinTypeRefiner",
          "org.jetbrains.kotlin.types.checker.KotlinTypePreparator"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.types.expressions.ControlStructureTypingUtils",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.CallResolver",
          "org.jetbrains.kotlin.types.expressions.DataFlowAnalyzer",
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.storage.StorageManager"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.types.expressions.DataFlowAnalyzer",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Iterable",
          "org.jetbrains.kotlin.resolve.constants.evaluate.ConstantExpressionEvaluator",
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor",
          "org.jetbrains.kotlin.builtins.KotlinBuiltIns",
          "org.jetbrains.kotlin.types.expressions.ExpressionTypingFacade",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.contracts.EffectSystem",
          "org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowValueFactory",
          "org.jetbrains.kotlin.resolve.calls.smartcasts.SmartCastManager",
          "org.jetbrains.kotlin.types.checker.KotlinTypeChecker"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.types.expressions.DestructuringDeclarationResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.expressions.FakeCallResolver",
          "org.jetbrains.kotlin.resolve.LocalVariableResolver",
          "org.jetbrains.kotlin.resolve.TypeResolver"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.types.expressions.DoubleColonExpressionResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.CallResolver",
          "org.jetbrains.kotlin.resolve.QualifiedExpressionResolver",
          "org.jetbrains.kotlin.types.expressions.DataFlowAnalyzer",
          "org.jetbrains.kotlin.builtins.ReflectionTypes",
          "org.jetbrains.kotlin.resolve.TypeResolver",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "java.lang.Iterable",
          "org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowValueFactory",
          "org.jetbrains.kotlin.types.expressions.FunctionWithBigAritySupport",
          "org.jetbrains.kotlin.types.expressions.GenericArrayClassLiteralSupport",
          "org.jetbrains.kotlin.types.checker.KotlinTypeRefiner"
        ]
      },
      {
        "name": "setExpressionTypingServices",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.expressions.ExpressionTypingServices"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.types.expressions.ExpressionTypingComponents",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setAnnotationChecker",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.AnnotationChecker"
        ]
      },
      {
        "name": "setAnnotationResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.AnnotationResolver"
        ]
      },
      {
        "name": "setAssignmentCheckers",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "setBuiltIns",
        "parameterTypes": [
          "org.jetbrains.kotlin.builtins.KotlinBuiltIns"
        ]
      },
      {
        "name": "setCallCheckers",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "setCallComponents",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.model.KotlinCallComponents"
        ]
      },
      {
        "name": "setCallExpressionResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.CallExpressionResolver"
        ]
      },
      {
        "name": "setCallResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.CallResolver"
        ]
      },
      {
        "name": "setCollectionLiteralResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.CollectionLiteralResolver"
        ]
      },
      {
        "name": "setConstantExpressionEvaluator",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.constants.evaluate.ConstantExpressionEvaluator"
        ]
      },
      {
        "name": "setContractParsingServices",
        "parameterTypes": [
          "org.jetbrains.kotlin.contracts.parsing.ContractParsingServices"
        ]
      },
      {
        "name": "setControlStructureTypingUtils",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.expressions.ControlStructureTypingUtils"
        ]
      },
      {
        "name": "setDataFlowAnalyzer",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.expressions.DataFlowAnalyzer"
        ]
      },
      {
        "name": "setDataFlowValueFactory",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowValueFactory"
        ]
      },
      {
        "name": "setDeclarationsCheckerBuilder",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.DeclarationsCheckerBuilder"
        ]
      },
      {
        "name": "setDeprecationResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.deprecation.DeprecationResolver"
        ]
      },
      {
        "name": "setDescriptorResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.DescriptorResolver"
        ]
      },
      {
        "name": "setDestructuringDeclarationResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.expressions.DestructuringDeclarationResolver"
        ]
      },
      {
        "name": "setDoubleColonExpressionResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.expressions.DoubleColonExpressionResolver"
        ]
      },
      {
        "name": "setEffectSystem",
        "parameterTypes": [
          "org.jetbrains.kotlin.contracts.EffectSystem"
        ]
      },
      {
        "name": "setExpressionTypingServices",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.expressions.ExpressionTypingServices"
        ]
      },
      {
        "name": "setFakeCallResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.expressions.FakeCallResolver"
        ]
      },
      {
        "name": "setForLoopConventionsChecker",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.expressions.ForLoopConventionsChecker"
        ]
      },
      {
        "name": "setFunctionDescriptorResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.FunctionDescriptorResolver"
        ]
      },
      {
        "name": "setGlobalContext",
        "parameterTypes": [
          "org.jetbrains.kotlin.context.GlobalContext"
        ]
      },
      {
        "name": "setIdentifierChecker",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.IdentifierChecker"
        ]
      },
      {
        "name": "setKotlinTypeChecker",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.checker.NewKotlinTypeChecker"
        ]
      },
      {
        "name": "setLanguageVersionSettings",
        "parameterTypes": [
          "org.jetbrains.kotlin.config.LanguageVersionSettings"
        ]
      },
      {
        "name": "setLocalClassifierAnalyzer",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.expressions.LocalClassifierAnalyzer"
        ]
      },
      {
        "name": "setLocalVariableResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.LocalVariableResolver"
        ]
      },
      {
        "name": "setLookupTracker",
        "parameterTypes": [
          "org.jetbrains.kotlin.incremental.components.LookupTracker"
        ]
      },
      {
        "name": "setMissingSupertypesResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.MissingSupertypesResolver"
        ]
      },
      {
        "name": "setModifiersChecker",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.ModifiersChecker"
        ]
      },
      {
        "name": "setModuleDescriptor",
        "parameterTypes": [
          "org.jetbrains.kotlin.descriptors.ModuleDescriptor"
        ]
      },
      {
        "name": "setOverloadChecker",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.OverloadChecker"
        ]
      },
      {
        "name": "setPlatformToKotlinClassMap",
        "parameterTypes": [
          "org.jetbrains.kotlin.builtins.PlatformSpecificCastChecker"
        ]
      },
      {
        "name": "setPlatformToKotlinClassMap",
        "parameterTypes": [
          "org.jetbrains.kotlin.builtins.PlatformToKotlinClassMapper"
        ]
      },
      {
        "name": "setRttiExpressionCheckers",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "setTypeResolutionInterceptor",
        "parameterTypes": [
          "org.jetbrains.kotlin.extensions.internal.TypeResolutionInterceptor"
        ]
      },
      {
        "name": "setTypeResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.resolve.TypeResolver"
        ]
      },
      {
        "name": "setValueParameterResolver",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.expressions.ValueParameterResolver"
        ]
      },
      {
        "name": "setWrappedTypeFactory",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.WrappedTypeFactory"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.types.expressions.ExpressionTypingFacade",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.jetbrains.kotlin.types.expressions.ExpressionTypingInternals",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.jetbrains.kotlin.types.expressions.ExpressionTypingServices",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.expressions.ExpressionTypingComponents",
          "org.jetbrains.kotlin.resolve.AnnotationChecker",
          "org.jetbrains.kotlin.resolve.StatementFilter",
          "org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher$ForDeclarations"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher$ForDeclarations",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.expressions.ExpressionTypingComponents",
          "org.jetbrains.kotlin.resolve.AnnotationChecker"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.types.expressions.FakeCallResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.com.intellij.openapi.project.Project",
          "org.jetbrains.kotlin.resolve.calls.CallResolver"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.types.expressions.ForLoopConventionsChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.builtins.KotlinBuiltIns",
          "org.jetbrains.kotlin.types.expressions.FakeCallResolver"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.types.expressions.FunctionWithBigAritySupport$LanguageVersionDependent",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.types.expressions.FunctionsTypingVisitor",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.expressions.ExpressionTypingInternals"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.types.expressions.GenericArrayClassLiteralSupport$Enabled",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.types.expressions.LocalClassifierAnalyzer",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.context.GlobalContext",
          "org.jetbrains.kotlin.storage.StorageManager",
          "org.jetbrains.kotlin.resolve.DescriptorResolver",
          "org.jetbrains.kotlin.resolve.FunctionDescriptorResolver",
          "org.jetbrains.kotlin.resolve.TypeResolver",
          "org.jetbrains.kotlin.resolve.AnnotationResolver",
          "org.jetbrains.kotlin.platform.TargetPlatform",
          "org.jetbrains.kotlin.resolve.PlatformDependentAnalyzerServices",
          "org.jetbrains.kotlin.incremental.components.LookupTracker",
          "org.jetbrains.kotlin.descriptors.SupertypeLoopChecker",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.resolve.lazy.DelegationFilter",
          "org.jetbrains.kotlin.types.WrappedTypeFactory",
          "org.jetbrains.kotlin.types.checker.NewKotlinTypeChecker",
          "org.jetbrains.kotlin.resolve.sam.SamConversionResolver",
          "org.jetbrains.kotlin.resolve.AdditionalClassPartsProvider",
          "org.jetbrains.kotlin.resolve.SealedClassInheritorsProvider",
          "org.jetbrains.kotlin.cfg.ControlFlowInformationProvider$Factory",
          "org.jetbrains.kotlin.resolve.lazy.AbsentDescriptorHandler"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.types.expressions.ValueParameterResolver",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jetbrains.kotlin.types.expressions.ExpressionTypingServices",
          "org.jetbrains.kotlin.resolve.constants.evaluate.ConstantExpressionEvaluator",
          "org.jetbrains.kotlin.config.LanguageVersionSettings",
          "org.jetbrains.kotlin.resolve.calls.smartcasts.DataFlowValueFactory"
        ]
      }
    ]
  },
  {
    "name": "org.jetbrains.kotlin.types.extensions.TypeAttributeTranslators",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "org.jetbrains.kotlin.util.ProgressManagerBasedCancellationChecker",
    "queryAllPublicMethods": true,
    "queryAllPublicConstructors": true
  },
  {
    "name": "sun.misc.Unsafe",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "arrayBaseOffset",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "arrayIndexScale",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "compareAndSwapInt",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "int",
          "int"
        ]
      },
      {
        "name": "compareAndSwapLong",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "long",
          "long"
        ]
      },
      {
        "name": "compareAndSwapObject",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "getAndAddInt",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "int"
        ]
      },
      {
        "name": "getObjectVolatile",
        "parameterTypes": [
          "java.lang.Object",
          "long"
        ]
      },
      {
        "name": "invokeCleaner",
        "parameterTypes": [
          "java.nio.ByteBuffer"
        ]
      },
      {
        "name": "objectFieldOffset",
        "parameterTypes": [
          "java.lang.reflect.Field"
        ]
      },
      {
        "name": "putObjectVolatile",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.provider.NativePRNG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "<init>",
        "parameterTypes": [
          "java.security.SecureRandomParameters"
        ]
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  }
]